let t={isEnabled:!1,rules:[]},o=1;chrome.runtime.onInstalled.addListener(async()=>{console.log("Extension installed"),t=(await chrome.storage.local.get(["settings"])).settings||{isEnabled:!1,rules:[]},await chrome.storage.local.set({settings:t}),await l()});chrome.storage.onChanged.addListener(async e=>{e.settings&&(t=e.settings.newValue,await l())});async function l(){try{const a=(await chrome.declarativeNetRequest.getDynamicRules()).map(s=>s.id);if(!t.isEnabled){await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:a}),console.log("All rules removed");return}const r=t.rules.map((s,i)=>({id:o++,priority:1,action:{type:"redirect",redirect:{url:`data:application/json,${encodeURIComponent(s.response)}`}},condition:{urlFilter:s.urlPattern,resourceTypes:["xmlhttprequest"]}}));await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:a,addRules:r}),console.log("Rules updated:",r)}catch(e){console.error("Error updating rules:",e)}}var n;(n=chrome.declarativeNetRequest.onRuleMatchedDebug)==null||n.addListener(e=>{console.log("Rule matched:",e)});
